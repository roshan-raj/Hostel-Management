<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KJic/wfT54nd887YowAAAABJRU5ErkJggg==
</value>
  </data>
</root>